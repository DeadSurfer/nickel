include base

# Модуль объявляется через module "Любое", "Количество", "Строк": код
# в данном случае 1 строка - код смайлика, 2 строка - само имя 
# (эти строки объединятся в одну при компиляции)
module "&#8505;", "Пример модуля":
  # command - объявление команд; при получении этих команд выполнится этот код 
  # Внутри command доступны объекты msg: Message (объект сообщеня),
  # и объект api: VkApi (объект для работы с VK API)
  command "тест", "test":
    # usage - использование команды, выводится в команде "помощь".
    # usage обязан быть константой (переменной, которая известна во время компиляции)
    # usage так же можно использовать в самом коде-обработчике (хоть это и не обычная переменная)
    usage = "тест <аргументы> - вывести полученные аргументы"
    # Переменные msg (Message) и api (VkApi) неявно доступны в этом блоке
    # Так же доступна переменная args - сокращение от msg.cmd.args
    const FormatString = "Это тестовая команда. Аргументы - $1\n Вложения - $2"
    # Получаем список приложений к сообщению через API
    let attaches = await msg.attaches(api)
    # Отвечаем пользователю
    answer(FormatString % [$args, $attaches])
  
  # Секций "command" может быть сколько угодно.
  # Все секции имеют отдельную область видимости переменных, так что
  # нельзя, например, получить FormatString из команды выше
  command "пример":
    usage = "пример - вывести `пример модуля`"
    # Так как синтаксис Nim очень свободный, можно убрать скобки
    answer "Пример модуля!"